#!/usr/bin/env sh

[ "$1" = "-h" ] && cat << eof
Usage:

   mono-trans --toggle [monocle,fullscreen]  toggle transparent monocle

   mono-trans --navigate [next,prev]         navigate to next/prev hidden nodes

   mono-trans --close                        closes current node and unhides the previous one

eof

[ "$STATUS_BAR" ] || export STATUS_BAR=yabar
top_padding=35

launchBar(){
   $STATUS_BAR &
}

bspc config borderless_monocle true
bspc config gapless_monocle true

case $1 in

   --navigate)
      # Regular navigations
      if [ "$2" = "next" ]; then
         bspc node -f next.local && exit 1
      else
         bspc node -f prev.local && exit 1
      fi

      # Edge cases
      [ ! -f "$nodeList" ] && exit 1
      [ "$(wc -l < "$nodeList")" = 0 ] && exit 1

      # This is where the fun begins
      if [ "$2" = "next" ]; then
         head -1 "$nodeList" | xargs -I% bspc node % -g hidden
         sed -i '1d' "$nodeList"
      else
         tail -1 "$nodeList" | xargs -I% bspc node % -g hidden
         sed -i '$d' "$nodeList"
      fi

      bspc query -N -n >> "$nodeList"
      bspc node -g hidden

      ;;

   --toggle)

      if [ "$2" = "fullscreen" ]; then
         if pidof yabar; then
            killall $STATUS_BAR
            bspc config top_padding 0
            xdo hide -dr
         else
            launchBar
            bspc config top_padding $top_padding
            xdo show -dr
         fi
         bspc node -t ~fullscreen
      else
         # Monocle Mode
         if [ "$(bspc wm -g | cut -d: -f7)" = "LT" ]; then
            xdo hide -dr
         else
            xdo show -dr
         fi
         bspc desktop -l next
         bspc node -f prev.local
         bspc node -n biggest.local
      fi
      ;;

   --close)
      bspc node -c
      if [ "$(wc -l < "$nodeList")" -gt 0 ]; then
         tail -1 "$nodeList" | xargs -I% bspc node % -g hidden
         sed -i '$d' "$nodeList"
      fi
      ;;

   *) : ;;

esac
